####################################################
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.


units		real        ## defines the units style used herein. More information: https://docs.lammps.org/units.html                             
atom_style	full        ## defines the atom style used herein. More information: https://docs.lammps.org/atom_style.html

# Styles
pair_style      lj/cut/coul/long 15.0 10.0      ## sets the formula(s) LAMMPS uses to compute pairwise interactions; here, lennard-jones (LJ) with long-range Coulomb interaction. More: https://docs.lammps.org/pair_lj_cut_coul.html
pair_modify     shift no                        ## the shift keyword determines whether a Lennard-Jones potential is shifted at its cutoff to 0.0. More: https://docs.lammps.org/pair_modify.html
kspace_style    pppm 1.0e-4                     ## defines a long-range solver for LAMMPS to compute long-range Coulombic interactions. Note: requires use of a matching pair style, i.e. PPPM with coul/long. More: https://docs.lammps.org/kspace_style.html
bond_style      harmonic                        ## defined based off the forcefield used to construct the system; models the atoms' interactions
angle_style     harmonic
dihedral_style  opls
improper_style  cvff                            
special_bonds   lj 0 0 1 coul 0 0 1

read_data       300K_PS.lmps      ## input lammps datafile, equilibriated until structure nears experimental properties

dielectric      1.0
neighbor    	1.0 bin
neigh_modify	delay 0 every 1 check no        ## this is to make sure that the neighbor list is updated every timestep, and the atoms don't get lost as the system is being deformed ##

timestep	    1.0                             ## unit = fs, per "real" unit style 
run_style       verlet                          ## defines algorithm used for simulation computation; verlet integration is a numerical method used to integrate Newton's equations of motion.

variable stress equal press*-1                         ## computes stress as the negative of press values
variable engStrain equal (lx-91.07191)/91.07191      ## computes engineering strain; lx_0 must be found and inputted manually (for now)

thermo		    20                                                               ## output log data (headers in thermo_style), recorded at every timestep in numList.txt
thermo_style    custom step vol temp press lx ly lz v_stress v_engStrain         ## data headers of output log file. More: https://docs.lammps.org/thermo_style.html

################# Deformation ##################

fix 1 all npt temp 300 300 100 y 1 1 100.0 z 1 1 100.0      ## stress normal to the x direction can vary; external pressure (y and z) = 1atm ##

fix 2 all deform 1 x scale 2.0 remap x                      ## sets a uniaxial (x-direction) deformation in motion, scaling a set amount (here, 4.0x) the initial length            


################# Dumping ##################

reset_timestep 0

dump dump2 all custom 4000 sim.lammpstrj id mol type q xs ys zs ix iy iz

restart 8000 PS.restart

run 		80000              ## this depends on the overall strain rate, where strain rate = deformScale / runTimeSteps (consider units!)
